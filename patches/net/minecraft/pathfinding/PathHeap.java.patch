--- ../src-base/minecraft/net/minecraft/pathfinding/PathHeap.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathHeap.java
@@ -5,16 +5,10 @@
     private PathPoint[] pathPoints = new PathPoint[128];
     private int count;
 
-    public PathPoint addPoint(PathPoint point)
+    public synchronized PathPoint addPoint(PathPoint point)
     {
-        if (point.index >= 0)
-        {
-            throw new IllegalStateException("OW KNOWS!");
-        }
-        else
-        {
-            if (this.count == this.pathPoints.length)
-            {
+        if (point.index < 0) {
+            if (this.count == this.pathPoints.length) {
                 PathPoint[] apathpoint = new PathPoint[this.count << 1];
                 System.arraycopy(this.pathPoints, 0, apathpoint, 0, this.count);
                 this.pathPoints = apathpoint;
@@ -23,16 +17,16 @@
             this.pathPoints[this.count] = point;
             point.index = this.count;
             this.sortBack(this.count++);
-            return point;
         }
+        return point;
     }
 
-    public void clearPath()
+    public synchronized void clearPath()
     {
         this.count = 0;
     }
 
-    public PathPoint dequeue()
+    public synchronized PathPoint dequeue()
     {
         PathPoint pathpoint = this.pathPoints[0];
         this.pathPoints[0] = this.pathPoints[--this.count];
@@ -47,7 +41,7 @@
         return pathpoint;
     }
 
-    public void changeDistance(PathPoint point, float distance)
+    public synchronized void changeDistance(PathPoint point, float distance)
     {
         float f = point.distanceToTarget;
         point.distanceToTarget = distance;
@@ -144,7 +138,7 @@
         pathpoint.index = index;
     }
 
-    public boolean isPathEmpty()
+    public synchronized boolean isPathEmpty()
     {
         return this.count == 0;
     }
