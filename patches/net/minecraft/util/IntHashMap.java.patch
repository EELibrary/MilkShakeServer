--- ../src-base/minecraft/net/minecraft/util/IntHashMap.java
+++ ../src-work/minecraft/net/minecraft/util/IntHashMap.java
@@ -21,7 +21,7 @@
     }
 
     @Nullable
-    public V lookup(int hashEntry)
+    public synchronized V lookup(int hashEntry)
     {
         int i = computeHash(hashEntry);
 
@@ -36,13 +36,13 @@
         return (V)null;
     }
 
-    public boolean containsItem(int hashEntry)
+    public synchronized boolean containsItem(int hashEntry)
     {
         return this.lookupEntry(hashEntry) != null;
     }
 
     @Nullable
-    final IntHashMap.Entry<V> lookupEntry(int hashEntry)
+    final synchronized IntHashMap.Entry<V> lookupEntry(int hashEntry)
     {
         int i = computeHash(hashEntry);
 
@@ -57,7 +57,7 @@
         return null;
     }
 
-    public void addKey(int hashEntry, V valueEntry)
+    public synchronized void addKey(int hashEntry, V valueEntry)
     {
         int i = computeHash(hashEntry);
         int j = getSlotIndex(i, this.slots.length);
@@ -92,7 +92,7 @@
         }
     }
 
-    private void copyTo(IntHashMap.Entry<V>[] p_76048_1_)
+    private synchronized void copyTo(IntHashMap.Entry<V>[] p_76048_1_)
     {
         IntHashMap.Entry<V>[] entry = this.slots;
         int i = p_76048_1_.length;
@@ -123,14 +123,14 @@
     }
 
     @Nullable
-    public V removeObject(int o)
+    public synchronized V removeObject(int o)
     {
         IntHashMap.Entry<V> entry = this.removeEntry(o);
         return (V)(entry == null ? null : entry.valueEntry);
     }
 
     @Nullable
-    final IntHashMap.Entry<V> removeEntry(int p_76036_1_)
+    final synchronized IntHashMap.Entry<V> removeEntry(int p_76036_1_)
     {
         int i = computeHash(p_76036_1_);
         int j = getSlotIndex(i, this.slots.length);
@@ -164,7 +164,7 @@
         return entry1;
     }
 
-    public void clearMap()
+    public synchronized void clearMap()
     {
         IntHashMap.Entry<V>[] entry = this.slots;
 
