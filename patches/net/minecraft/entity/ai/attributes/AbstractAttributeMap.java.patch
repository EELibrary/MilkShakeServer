--- ../src-base/minecraft/net/minecraft/entity/ai/attributes/AbstractAttributeMap.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/attributes/AbstractAttributeMap.java
@@ -11,7 +11,7 @@
 
 public abstract class AbstractAttributeMap
 {
-    protected final Map<IAttribute, IAttributeInstance> attributes = Maps.<IAttribute, IAttributeInstance>newHashMap();
+    protected final Map<IAttribute, IAttributeInstance> attributes = Maps.<IAttribute, IAttributeInstance>newConcurrentMap();
     protected final Map<String, IAttributeInstance> attributesByName = new LowerStringMap();
     protected final Multimap<IAttribute, IAttribute> descendantsByParent = HashMultimap.<IAttribute, IAttribute>create();
 
@@ -23,24 +23,34 @@
     @Nullable
     public IAttributeInstance getAttributeInstanceByName(String attributeName)
     {
-        return this.attributesByName.get(attributeName);
+        synchronized (this.attributesByName){
+            return this.attributesByName.get(attributeName);
+        }
     }
 
     public IAttributeInstance registerAttribute(IAttribute attribute)
     {
-        if (this.attributesByName.containsKey(attribute.getName()))
+        boolean fla;
+        synchronized(this.attributesByName){
+            fla = this.attributesByName.containsKey(attribute.getName());
+        }
+       if (fla)
         {
             throw new IllegalArgumentException("Attribute is already registered!");
         }
         else
         {
             IAttributeInstance iattributeinstance = this.createInstance(attribute);
-            this.attributesByName.put(attribute.getName(), iattributeinstance);
+            synchronized (this.attributesByName){
+                this.attributesByName.put(attribute.getName(), iattributeinstance);
+            }
             this.attributes.put(attribute, iattributeinstance);
 
             for (IAttribute iattribute = attribute.getParent(); iattribute != null; iattribute = iattribute.getParent())
             {
-                this.descendantsByParent.put(iattribute, attribute);
+                synchronized (this.descendantsByParent){
+                    this.descendantsByParent.put(iattribute, attribute);
+                }
             }
 
             return iattributeinstance;
@@ -51,7 +61,9 @@
 
     public Collection<IAttributeInstance> getAllAttributes()
     {
-        return this.attributesByName.values();
+        synchronized (this.attributesByName){
+            return this.attributesByName.values();
+        }
     }
 
     public void onAttributeModified(IAttributeInstance instance)
