--- ../src-base/minecraft/net/minecraft/entity/ai/attributes/ModifiableAttributeInstance.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/attributes/ModifiableAttributeInstance.java
@@ -15,9 +15,9 @@
 {
     private final AbstractAttributeMap attributeMap;
     private final IAttribute genericAttribute;
-    private final Map<Integer, Set<AttributeModifier>> mapByOperation = Maps.<Integer, Set<AttributeModifier>>newHashMap();
-    private final Map<String, Set<AttributeModifier>> mapByName = Maps.<String, Set<AttributeModifier>>newHashMap();
-    private final Map<UUID, AttributeModifier> mapByUUID = Maps.<UUID, AttributeModifier>newHashMap();
+    private final Map<Integer, Set<AttributeModifier>> mapByOperation = Maps.newConcurrentMap();
+    private final Map<String, Set<AttributeModifier>> mapByName = Maps.newConcurrentMap();
+    private final Map<UUID, AttributeModifier> mapByUUID = Maps.newConcurrentMap();
     private double baseValue;
     private boolean needsUpdate = true;
     private double cachedValue;
@@ -30,7 +30,7 @@
 
         for (int i = 0; i < 3; ++i)
         {
-            this.mapByOperation.put(Integer.valueOf(i), Sets.newHashSet());
+            this.mapByOperation.put(Integer.valueOf(i), Sets.newConcurrentHashSet());
         }
     }
 
@@ -60,7 +60,7 @@
 
     public Collection<AttributeModifier> getModifiers()
     {
-        Set<AttributeModifier> set = Sets.<AttributeModifier>newHashSet();
+        Set<AttributeModifier> set = Sets.<AttributeModifier>newConcurrentHashSet();
 
         for (int i = 0; i < 3; ++i)
         {
@@ -83,12 +83,8 @@
 
     public void applyModifier(AttributeModifier modifier)
     {
-        if (this.getModifier(modifier.getID()) != null)
+        if (this.getModifier(modifier.getID()) == null)
         {
-            throw new IllegalArgumentException("Modifier is already applied on this attribute!");
-        }
-        else
-        {
             Set<AttributeModifier> set = (Set)this.mapByName.get(modifier.getName());
 
             if (set == null)
