--- ../src-base/minecraft/net/minecraft/world/ChunkCache.java
+++ ../src-work/minecraft/net/minecraft/world/ChunkCache.java
@@ -4,6 +4,8 @@
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
+import net.minecraft.server.management.PlayerChunkMap;
+import net.minecraft.server.management.PlayerChunkMapEntry;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.math.BlockPos;
@@ -61,7 +63,7 @@
     @Nullable
     public TileEntity getTileEntity(BlockPos pos)
     {
-        return this.getTileEntity(pos, Chunk.EnumCreateEntityType.IMMEDIATE);
+        return this.getTileEntity(pos, Chunk.EnumCreateEntityType.CHECK); // Forge: don't modify world from other threads
     }
 
     @Nullable
@@ -69,6 +71,7 @@
     {
         int i = (pos.getX() >> 4) - this.chunkX;
         int j = (pos.getZ() >> 4) - this.chunkZ;
+        if (!withinBounds(i, j)) return null;
         return this.chunkArray[i][j].getTileEntity(pos, p_190300_2_);
     }
 
@@ -112,6 +115,7 @@
     {
         int i = (pos.getX() >> 4) - this.chunkX;
         int j = (pos.getZ() >> 4) - this.chunkZ;
+        if (!withinBounds(i, j)) return net.minecraft.init.Biomes.PLAINS;
         return this.chunkArray[i][j].getBiome(pos, this.world.getBiomeProvider());
     }
 
@@ -149,6 +153,7 @@
             {
                 int i = (pos.getX() >> 4) - this.chunkX;
                 int j = (pos.getZ() >> 4) - this.chunkZ;
+                if (!withinBounds(i, j)) return type.defaultLightValue;
                 return this.chunkArray[i][j].getLightFor(type, pos);
             }
         }
@@ -160,7 +165,8 @@
 
     public boolean isAirBlock(BlockPos pos)
     {
-        return this.getBlockState(pos).getMaterial() == Material.AIR;
+        IBlockState state = this.getBlockState(pos);
+        return state.getBlock().isAir(state, this, pos);
     }
 
     @SideOnly(Side.CLIENT)
@@ -170,6 +176,7 @@
         {
             int i = (pos.getX() >> 4) - this.chunkX;
             int j = (pos.getZ() >> 4) - this.chunkZ;
+            if (!withinBounds(i, j)) return type.defaultLightValue;
             return this.chunkArray[i][j].getLightFor(type, pos);
         }
         else
@@ -188,4 +195,21 @@
     {
         return this.world.getWorldType();
     }
+
+    @Override
+    public boolean isSideSolid(BlockPos pos, EnumFacing side, boolean _default)
+    {
+        int x = (pos.getX() >> 4) - this.chunkX;
+        int z = (pos.getZ() >> 4) - this.chunkZ;
+        if (pos.getY() < 0 || pos.getY() >= 256) return _default;
+        if (!withinBounds(x, z)) return _default;
+
+        IBlockState state = getBlockState(pos);
+        return state.getBlock().isSideSolid(state, this, pos, side);
+    }
+
+    private boolean withinBounds(int x, int z)
+    {
+        return x >= 0 && x < chunkArray.length && z >= 0 && z < chunkArray[x].length && chunkArray[x][z] != null;
+    }
 }
